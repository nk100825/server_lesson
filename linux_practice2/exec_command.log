ls
exit
sudo yum -y update
vagrant reload
sudo yum -y install パッケージ名
sudo yum -y groupinstall "development tools"
sudo yum -y install epel-release wget
sudo wget http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
sudo rpm -Uvh remi-release-7.rpm
sudo yum -y install --enablerepo=remi-php72 php php-pdo php-mysqlnd php-mbstring php-xml php-fpm php-common php-devel php-mysql unzip
php -v
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
composer -v
ls /
/
pwd
 cd /vagrant
 cd /vagrantpwd
pwd
cd usr
pwd
ls /
cd usr
ls /usr
ls /
 cd /vagrant
mkdir server_lesson && cd server_lesson
server_lesson
git init
touch first.txt
ls
ls /
cd /vagrant
mkdir server_lesson/linux_practice/public
cd /vagrant
mkdir -p server_lesson/linux_practice/public
ls server_lesson server_lesson/linux_practice
cd /vagrant
touch server_lesson/linux_practice/public/index.php
ls server_lesson/linux_practice/public
cd /vagrant/server_lesson && ls
cd /vagrant/server_lesson/linux_practice/public
cp index.php index_bk.php
ls
cd /vagrant/server_lesson/linux_practice
cp -r public tmp
ls ./ public tmp
cd /vagrant
mv server_lesson/linux_practice server_lesson/linux_practice1
mkdir linux_practice2 linux_practice3
mv ./linux_practice2 ./server_lesson
cd /vagrant/server_lesson/linux_practice1/tmp/
rm *_bk.php
cd /vagrant
rm server_lesson/first.txt
rm -r linux_practice3
ls server_lesson
cd /vagrant/server_lesson
echo '# サーバレッスン' > README.md
echo 'Linuxプラクティス' >> README.md
echo '-----------------' >> README.md
cat README.md
cd /vagrant/server_lesson
vi README.md
cat
cat README.md 
ls
cd linux_practice1
ls
cd public/
ls
cd ../
ls
cd tmo
tmp
cd tmp
ls
git status
git commit -m 'first commit'
git status
ls
cd ../../
ls
ls -a
ls
git status
git add
git add .
git status
 On branch master
#
# Initial commit
#
# Changes to be committed:
#   (use "git rm --cached <file>..." to unstage)
#
#new file:   README.md
#new file:   linux_practice1/public/index.php
#new file:   linux_practice1/public/index_bk.php
#new file:   linux_practice1/tmp/index.php
 On branch master
#
# Initial commit
#
# Changes to be committed:
#   (use "git rm --cached <file>..." to unstage)
#
#new file:   README.md
#new file:   linux_practice1/public/index.php
#new file:   linux_practice1/public/index_bk.php
#new file:   linux_practice1/tmp/index.php
 On branch master
#
# Initial commit
#
# Changes to be committed:
#   (use "git rm --cached <file>..." to unstage)
#
#new file:   README.md
#new file:   linux_practice1/public/index.php
#new file:   linux_practice1/public/index_bk.php
#new file:   linux_practice1/tmp/index.php
git commit -m 'first commit'
git status
git log
git push origin master
git status
git init
git status
git add .
git status
git commit -m 'first commit'
git log
git status
git log
git remote -v
git remote 
git remote add origin https://github.com/nk100825/server_lesson.git
git remote -v
git log
git status
git push origin master
ls
cd linux_practice2
ls
mkdir documents
ls
cd documents/
ls
touch gizumo{1..100}.md
ls
rm gizumo{1..100}.md
ls
rm gizumo{01..50}.md
touch gizumo{01..50}.md
ls
cd ./
ls
cd../
cd ../
ls
mkdir trash
ls
cd trash
ls
mv gizumo{01..20}.md
mv gizumo{01..20}.md trash
mv gizumo{20..40}.md trash
cd ../
cd documents/

cd ../
cd documents/
mv gizumo{20..40}.md ../trash
ls
cd ../
ls
cd trash/
ls
mkdir .gitignore
ls
rm .gitignore
rmdir .gitignore
ls
ls -a
cd ../
mkdir .gitignore
ls -a
mkdir .gitignore
cd .gitignore
mkdir .gitignore
rmdir .gitignore
ls
cd ../
ls
ls -a

ls -a
rm .gitignore
mk .gitignore
touch .gitignore
ls
ls -a
cd .gitignore
gizumo{20..29}.md
vi gizumo{20..29}.md
ls
rm gizumo20.md
ls
ls-a
ls -a
vi .gitignore
cat .gitignore 
history 300
history -w exec_command.log
